{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/AddFolder.js","ValidationError/ValidationError.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","console","log","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","_this$props","modified","value","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","AddFolder","handleSubmit","newFolder","target","body","JSON","stringify","Content-Type","data","err","handleCancel","_this2","onSubmit","htmlFor","ValidationError","message","Fragment","AddNote","state","touched","getFolders","folderOptions","onChange","updateFolderId","disabled","selected","_this$state","Date","setState","nameError","validateName","contentError","validateContent","updateName","updateContent","validateFolders","App","handleAddFolder","toConsumableArray","handleAddNote","newNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","proptypes","PropTypes","arrayOf","shape","string","isRequired","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.95da5979.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CircleButton.css'\r\n\r\nexport default function NavCircleButton(props) {\r\n  const { tag, className, childrenm, ...otherProps } = props\r\n\r\n  return React.createElement(\r\n    props.tag,\r\n    {\r\n      className: ['NavCircleButton', props.className].join(' '),\r\n      ...otherProps\r\n    },\r\n    props.children\r\n  )\r\n}\r\n\r\nNavCircleButton.defaultProps ={\r\n  tag: 'a',\r\n}\r\n","import React from 'react'\r\n\r\nexport default React.createContext({\r\n  notes: [],\r\n  folders: [],\r\n  addFolder: () => {},\r\n  addNote: () => {},\r\n  deleteNote: () => {},\r\n})\r\n","\r\nexport const findFolder = (folders=[], folderId) =>\r\n  folders.find(folder => folder.id === folderId)\r\n\r\nexport const findNote = (notes=[], noteId) =>\r\n  {console.log(notes)\r\n  return notes.find(note => note.id === noteId)}\r\n\r\nexport const getNotesForFolder = (notes=[], folderId) => (\r\n  (!folderId)\r\n    ? notes\r\n    : notes.filter(note => note.folderId === folderId)\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderId) =>\r\n  notes.filter(note => note.folderId === folderId).length\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { countNotesForFolder } from '../notes-helpers'\r\nimport './NoteListNav.css'\r\n\r\nexport default class NoteListNav extends React.Component {\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { folders=[], notes=[] } = this.context\r\n    return (\r\n      <div className='NoteListNav'>\r\n        <ul className='NoteListNav__list'>\r\n          {folders.map(folder =>\r\n            <li key={folder.id}>\r\n              <NavLink\r\n                className='NoteListNav__folder-link'\r\n                to={`/folder/${folder.id}`}\r\n              >\r\n                <span className='NoteListNav__num-notes'>\r\n                  {countNotesForFolder(notes, folder.id)}\r\n                </span>\r\n                {folder.name}\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListNav__button-wrapper'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-folder'\r\n            type='button'\r\n            className='NoteListNav__add-folder-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Folder\r\n          </CircleButton>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote, findFolder } from '../notes-helpers'\r\nimport './NotePageNav.css'\r\n\r\nexport default class NotePageNav extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      goBack: () => { }\r\n    },\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { notes, folders, } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || {}\r\n    const folder = findFolder(folders, note.folderId)\r\n    return (\r\n      <div className='NotePageNav'>\r\n        <CircleButton\r\n          tag='button'\r\n          role='link'\r\n          onClick={() => this.props.history.goBack()}\r\n          className='NotePageNav__back-button'\r\n        >\r\n          <FontAwesomeIcon icon='chevron-left' />\r\n          <br />\r\n          Back\r\n        </CircleButton>\r\n        {folder && (\r\n          <h3 className='NotePageNav__folder-name'>\r\n            {folder.name}\r\n          </h3>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default {\r\n  API_ENDPOINT: 'http://localhost:9090'\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport PropTypes from 'prop-types';\r\nimport './Note.css'\r\n\r\nexport default class Note extends React.Component {\r\n  static defaultProps ={\r\n    onDeleteNote: () => {},\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  handleClickDelete = e => {\r\n    e.preventDefault()\r\n    const noteId = this.props.id\r\n\r\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n        return res.json()\r\n      })\r\n      .then(() => {\r\n        this.context.deleteNote(noteId)\r\n        // allow parent to perform extra behaviour\r\n        this.props.onDeleteNote(noteId)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { name, id, modified, value } = this.props\r\n    return (\r\n      <div className='Note'>\r\n        <h2 className='Note__title'>\r\n          <Link to={`/note/${id}`}key={value}>\r\n            {name}\r\n          </Link>\r\n        </h2>\r\n        <button\r\n          className='Note__delete'\r\n          type='button'\r\n          onClick={this.handleClickDelete}\r\n        >\r\n          <FontAwesomeIcon icon='trash-alt' />\r\n          {' '}\r\n          remove\r\n        </button>\r\n        <div className='Note__dates'>\r\n          <div className='Note__dates-modified'>\r\n            Modified\r\n            {' '}\r\n            <span className='Date'>\r\n              {format(modified, 'Do MMM YYYY')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNote.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Note from '../Note/Note'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { getNotesForFolder } from '../notes-helpers'\r\nimport './NoteListMain.css'\r\n\r\nexport default class NoteListMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  render() {\r\n    const { folderId } = this.props.match.params\r\n    const { notes=[] } = this.context\r\n    const notesForFolder = getNotesForFolder(notes, folderId)\r\n    return (\r\n      <section className='NoteListMain'>\r\n        <ul>\r\n          {notesForFolder.map(note =>\r\n            <li key={note.id}>\r\n              <Note\r\n                id={note.id}\r\n                name={note.name}\r\n                modified={note.modified}\r\n              />\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListMain__button-container'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-note'\r\n            type='button'\r\n            className='NoteListMain__add-note-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Note\r\n          </CircleButton>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport Note from '../Note/Note'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote } from '../notes-helpers'\r\nimport './NotePageMain.css'\r\n\r\nexport default class NotePageMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  handleDeleteNote = noteId => {\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    const { notes=[] } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || { content: '' }\r\n    return (\r\n      <section className='NotePageMain'>\r\n        <Note\r\n          id={note.id}\r\n          name={note.name}\r\n          modified={note.modified}\r\n          onDeleteNote={this.handleDeleteNote}\r\n        />\r\n        <div className='NotePageMain__content'>\r\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\r\n            <p key={i}>{para}</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ApiContext from '../ApiContext';\r\nimport config from '../config';\r\nimport './AddFolder.css';\r\n\r\nexport default class AddFolder extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      goBack: () => {}\r\n    },\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  \r\n  static contextType = ApiContext;\r\n  \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name } = e.target;\r\n    const newFolder = {\r\n      name: name.value\r\n    };\r\n    fetch(`${config.API_ENDPOINT}/folders`, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFolder),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) {\r\n          return res.json().then(error => {\r\n            throw error\r\n          });\r\n        }\r\n        return res.json()\r\n      })\r\n      .then(data => {\r\n        this.context.addFolder(data);\r\n        this.props.history.push('/');\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n    \r\n    //this.context.addFolder({id: \"folder\", name: \"Name\"});\r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push(\"/\");\r\n  }\r\n  \r\n  render() {\r\n    console.log(this.context);\r\n    return (\r\n      <div className=\"folder-form\">\r\n        <form className=\"newFolder\" onSubmit={e => this.handleSubmit(e)}>\r\n          <label htmlFor=\"name\">Folder Name</label>\r\n          <input type=\"text\" name=\"name\" id=\"name\"/>\r\n          <div className=\"button-set\">\r\n            <button type=\"submit\">Submit Folder</button>\r\n            <button type=\"button\" onClick={e => this.handleCancel(e)}>Cancel</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ValidationError(props) {\r\n  if(props.message) {\r\n    return (\r\n      <div className=\"error\">{props.message}</div>\r\n    );\r\n  }\r\n\r\n  return <></>\r\n}","import React, { Component } from 'react';\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport ValidationError from \"../ValidationError/ValidationError\"\r\nimport './AddNote.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class AddNote extends Component {\r\n    static contextType = ApiContext;\r\n\r\n    state = {\r\n        name: {\r\n            value: \"\",\r\n            touched: false\r\n        },\r\n        content: {\r\n            value: \"\",\r\n            touched: false\r\n        },\r\n        folderId: {\r\n            value: \"\",\r\n            touched: false\r\n        }\r\n    }\r\n\r\n    getFolders = (e) => {\r\n        const { folders } = this.context;\r\n        if (!folders || folders.length === 0) {\r\n            return <p>No folders found... Make a folder first</p>\r\n        }\r\n        const folderOptions = folders.map(folder => {\r\n            return <option key={folder.id} value={folder.id}>{folder.name}</option>\r\n        });\r\n        return <select name=\"folderId\" id=\"folderId\" onChange={e => this.updateFolderId(e.target.value)}>\r\n            <option value=\"\" disabled selected>Select a Folder...</option>\r\n            {folderOptions}\r\n        </select>\r\n    }\r\n\r\n    updateName(name) {\r\n        this.setState({\r\n            name:{value: name, touched: true}\r\n        });\r\n    }\r\n\r\n    updateContent(content) {\r\n        this.setState({\r\n            content:{value: content, touched: true}\r\n        });\r\n    }\r\n    updateFolderId(id) {\r\n        this.setState({\r\n            folderId:{ value: id, touched: true }\r\n        });\r\n    }\r\n\r\n    validateName() {\r\n        const name = this.state.name\r\n        if (name.value.length === 0) {\r\n            return \"Name is required\";\r\n        }\r\n    }\r\n    validateContent() {\r\n        const content = this.state.content\r\n        if (content.value.length === 0) {\r\n            return \"Content is required\";\r\n        }\r\n    }\r\n    validateFolders() {\r\n        return !this.state.folderId.touched;\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const { name, content, folderId } = this.state\r\n        const modified = new Date();\r\n        const note = { name: name.value, content: content.value, folderId: folderId.value, modified}\r\n        console.log(note);\r\n        fetch(`${config.API_ENDPOINT}/notes/`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(note),\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n        })\r\n            .then(res => {\r\n                if (!res.ok)\r\n                    return res.json().then(e => Promise.reject(e))\r\n                return res.json()\r\n            })\r\n            .then((data) => {\r\n                this.context.addNote(data)\r\n                this.props.history.push(\"/\")\r\n            })\r\n            .catch(error => {\r\n                console.error({ error })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const nameError = this.validateName();\r\n        const contentError = this.validateContent();\r\n        this.getFolders();\r\n        return (\r\n            <div className=\"note-form\">\r\n                <h2>Add New Note</h2>\r\n                <form className=\"newNote\" onSubmit={e => this.handleSubmit(e)}>\r\n                    <label htmlFor=\"note-name\">Note Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"note-name\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        onChange={e => this.updateName(e.target.value)}\r\n                    />\r\n                    {this.state.name.touched && <ValidationError message={nameError} />}\r\n                    <label htmlFor=\"note-content\">Note Content</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"note-content\"\r\n                        name=\"content\"\r\n                        onChange={e => this.updateContent(e.target.value)}\r\n                    />\r\n                    {this.state.name.touched && <ValidationError message={contentError} />}\r\n                    <label>Folder: </label>\r\n                    {this.getFolders()}\r\n                    <button \r\n                        type=\"submit\" \r\n                        value=\"submit\"\r\n                        disabled={\r\n                            this.validateName() ||\r\n                            this.validateContent() ||\r\n                            this.validateFolders()\r\n                        }\r\n                        >Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport NoteListNav from '../NoteListNav/NoteListNav';\r\nimport NotePageNav from '../NotePageNav/NotePageNav';\r\nimport NoteListMain from '../NoteListMain/NoteListMain';\r\nimport NotePageMain from '../NotePageMain/NotePageMain';\r\nimport AddFolder from '../AddFolder/AddFolder';\r\nimport AddNote from '../AddNote/AddNote';\r\nimport ApiContext from '../ApiContext';\r\nimport config from '../config';\r\nimport PropTypes from 'prop-types';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        notes: [],\r\n        folders: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(`${config.API_ENDPOINT}/notes`),\r\n            fetch(`${config.API_ENDPOINT}/folders`)\r\n        ])\r\n            .then(([notesRes, foldersRes]) => {\r\n                if (!notesRes.ok)\r\n                    return notesRes.json().then(e => Promise.reject(e));\r\n                if (!foldersRes.ok)\r\n                    return foldersRes.json().then(e => Promise.reject(e));\r\n\r\n                return Promise.all([notesRes.json(), foldersRes.json()]);\r\n            })\r\n            .then(([notes, folders]) => {\r\n                this.setState({notes, folders});\r\n            })\r\n            .catch(error => {\r\n                console.error({error});\r\n            });\r\n    }\r\n    handleAddFolder = folder => {\r\n        this.setState({\r\n            folders: [...this.state.folders, folder]\r\n        });\r\n    }\r\n    handleDeleteNote = noteId => {\r\n        this.setState({\r\n            notes: this.state.notes.filter(note => note.id !== noteId)\r\n        });\r\n    };\r\n\r\n    handleAddNote = newNote => {\r\n        this.setState({\r\n            notes: [...this.state.notes, newNote]\r\n        })\r\n    }\r\n\r\n    renderNavRoutes() {\r\n        return (\r\n            <>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        component={NoteListNav}\r\n                    />\r\n                ))}\r\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\r\n                <Route path=\"/add-folder\" component={NotePageNav} />\r\n                <Route path=\"/add-note\" component={NotePageNav} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderMainRoutes() {\r\n        return (\r\n            <>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        component={NoteListMain}\r\n                    />\r\n                ))}\r\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\r\n                <Route path=\"/add-folder\" component={AddFolder}/>\r\n                <Route path=\"/add-note\" component={AddNote}/>\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const value = {\r\n            notes: this.state.notes,\r\n            folders: this.state.folders,\r\n            addFolder: this.handleAddFolder,\r\n            addNote: this.handleAddNote,\r\n            deleteNote: this.handleDeleteNote\r\n        };\r\n        return (\r\n            <ApiContext.Provider value={value}>\r\n                <div className=\"App\">\r\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\r\n                    <header className=\"App__header\">\r\n                        <h1>\r\n                            <Link to=\"/\">Noteful</Link>{' '}\r\n                            <FontAwesomeIcon icon=\"check-double\" />\r\n                        </h1>\r\n                    </header>\r\n                    <main className=\"App__main\">{this.renderMainRoutes()}</main>\r\n                </div>\r\n            </ApiContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nApp.proptypes = {\r\n    folders: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string\r\n    })),\r\n    notes: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string,\r\n        folderId: PropTypes.string.isRequired,\r\n        content: PropTypes.string\r\n    }))\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'typeface-roboto'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}